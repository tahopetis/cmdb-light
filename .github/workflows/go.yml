name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cmdb_lite_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Check out code
      uses: actions/checkout@v2

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: |
        go mod download
        go mod tidy

    - name: Run linter
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.43
        args: --timeout=5m

    - name: Run vet
      run: go vet ./...

    - name: Run unit tests
      run: go test -v -short ./...
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: cmdb_lite_test

    - name: Run tests with coverage
      run: go test -v -coverprofile=coverage.out ./...
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: cmdb_lite_test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Check out code
      uses: actions/checkout@v2

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: go build -v ./cmd/main.go

    - name: Build Docker image
      run: docker build -t cmdb-lite-backend:latest -f backend/Dockerfile .

    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: /tmp/docker-image.tar